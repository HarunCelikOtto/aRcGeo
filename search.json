[{"path":"https://haruncelikotto.github.io/aRcGeo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 aRcGeo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/articles/aRcGeo.html","id":"installing-arcgeo","dir":"Articles","previous_headings":"","what":"Installing aRcGeo","title":"aRcGeo","text":"can install development version aRcGeo GitHub : installed, load library : first time library loaded, receive message asking package arcgisbinding loaded already. functions verifying ArcGIS licenses aRcGeo use arcgisbinding package.","code":"# install.packages(\"devtools\") devtools::install_github(\"HarunCelikOtto/aRcGeo\") library(aRcGeo) #> The functions in this library require the user to have `arcgisbinding` loaded. #>                       Please load `library(arcgisbinding)` before running any aRcGeo functions."},{"path":"https://haruncelikotto.github.io/aRcGeo/articles/aRcGeo.html","id":"initializing-an-arcgis-connection","dir":"Articles","previous_headings":"","what":"Initializing an ArcGIS Connection","title":"aRcGeo","text":"main purpose aRcGeo package provide streamlined process initializing connection ArcGIS importing arcpy python module time. achieved using aRcGeo::init_arcpy() function. init_arcpy() takes one two string arguments. conda_env =  \"conda environment name\" python_env_path = \"string path python.exe\" Since installations arcpy ArcGIS Pro use conda environment, easiest supply conda environment name conda_env argument. can check name conda environment using reticulate::conda_list().","code":"# List your conda environments with Reticulate  # install.packages(\"reticulate\") reticulate::conda_list() |>    as.list() |>    magrittr::extract2(1) [1] \"base\"                        [2] \"Python_Image_Processing\"     [3] \"arcgispro-py3-DeepLearning\"  [4] \"r-miniconda\"                [5] \"r-reticulate\""},{"path":"https://haruncelikotto.github.io/aRcGeo/articles/aRcGeo.html","id":"calling-init_arcpy","dir":"Articles","previous_headings":"","what":"Calling init_arcpy()","title":"aRcGeo","text":"confirming name conda environment arcpy exists, can call init_arcpy() initialize ArcGIS connection: Output:","code":"aRcGeo::init_arcpy(conda_env = \"arcgispro-py3-DeepLearning\") -- Initializing Connection --------------------------------------------------------------------- > Initializing Connection to ArcGIS.  -- Checking Conda Environment --------------------------------------------------------------------- i All Local Conda Environments: [1] \"base\"                        [2] \"Python_Image_Processing\"     [3] \"arcgispro-py3-DeepLearning\"  [4] \"r-miniconda\"                [5] \"r-reticulate\"               v Using conda environment: arcgispro-py3-DeepLearning v An `arcpy` module successfully imported.                               i ArcGIS Product Details:    $license                     [1] \"Advanced\"  $version [1] \"13.1.0.41833\"  $path [1] \"C:\\\\Program Files\\\\ArcGIS\\\\Pro\\\\\"  $dll [1] \"rarcproxy_pro\"  $app [1] \"ArcGIS Pro\"  $pkg_ver [1] \"1.0.1.300\""},{"path":"https://haruncelikotto.github.io/aRcGeo/articles/aRcGeo.html","id":"examples-of-arcpy-functionality","dir":"Articles","previous_headings":"","what":"Examples of arcpy Functionality","title":"aRcGeo","text":"function call completed without error, user now see arcpy module R Environment. means functionality arcpy can now used R session. basic call ListEnvironments() function arcypy. Output:","code":"arcpy$ListEnvironments() [1] \"autoCommit\"                      \"XYResolution\"                     [3] \"processingServerUser\"            \"gpuId\"                            [5] \"XYDomain\"                        \"processingServerPassword\"         [7] \"scratchWorkspace\"                \"recycleProcessingWorkers\"         [9] \"cartographicPartitions\"          \"terrainMemoryUsage\"              [11] \"MTolerance\"                      \"compression\"                     [13] \"coincidentPoints\"                \"baUseDetailedAggregation\"        [15] \"timeZone\"                        \"randomGenerator\"                 [17] \"outputCoordinateSystem\"          \"rasterStatistics\"                [19] \"transferGDBAttributeProperties\"  \"ZDomain\"                         [21] \"cellSizeProjectionMethod\"        \"maintainCurveSegments\"           [23] \"transferDomains\"                 \"S100FeatureCatalogueFile\"        [25] \"maintainAttachments\"             \"resamplingMethod\"                [27] \"snapRaster\"                      \"cartographicCoordinateSystem\"    [29] \"baNetworkSource\"                 \"configKeyword\"                   [31] \"matchMultidimensionalVariable\"   \"outputZFlag\"                     [33] \"qualifiedFieldNames\"             \"tileSize\"                        [35] \"annotationTextStringFieldLength\" \"parallelProcessingFactor\"        [37] \"pyramid\"                         \"referenceScale\"                  [39] \"processingServer\"                \"extent\"                          [41] \"unionDimension\"                  \"XYTolerance\"                     [43] \"daylightSaving\"                  \"tinSaveVersion\"                  [45] \"nodata\"                          \"MDomain\"                         [47] \"cellSize\"                        \"outputZValue\"                    [49] \"outputMFlag\"                     \"cellAlignment\"                   [51] \"geographicTransformations\"       \"ZResolution\"                     [53] \"mask\"                            \"processorType\"                   [55] \"maintainSpatialIndex\"            \"preserveGlobalIds\"               [57] \"workspace\"                       \"retryOnFailures\"                 [59] \"MResolution\"                     \"baDataSource\"                    [61] \"ZTolerance\"                      \"scratchGDB\"                      [63] \"scratchFolder\"                   \"packageWorkspace\"                [65] \"scriptWorkspace\"                 \"addOutputsToMap\"                 [67] \"buildStatsAndRATForTempRaster\"   \"autoCancelling\"                  [69] \"isCancelled\"                     \"overwriteOutput\""},{"path":"https://haruncelikotto.github.io/aRcGeo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Harun Celik. Maintainer.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Celik H (2023). aRcGeo: R Binding Python's Arcpy. R package version 0.1.0, https://haruncelikotto.github.io/aRcGeo/.","code":"@Manual{,   title = {aRcGeo: An R Binding for Python's Arcpy},   author = {Harun Celik},   year = {2023},   note = {R package version 0.1.0},   url = {https://haruncelikotto.github.io/aRcGeo/}, }"},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"arcgeo","dir":"","previous_headings":"","what":"An R Binding for Python's Arcpy","title":"An R Binding for Python's Arcpy","text":"Harun Celik 2023-04-01  goal aRcGeo package offer streamline process initializing arcpy environment R session using reticulate arcgisbinding. initializing licensing init_arcpy(), licensed arcpy functionality available use R session.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"An R Binding for Python's Arcpy","text":"following installed configured device order aRcGeo work successfully. Trying import arcpy module without initializing licensing setting right python path conda environment terminate RStudio session. Ensure following installed function properly working aRcGeo. ArcGIS Pro 1.1 later R Statistical Computing Software, 3.5 later. 64-bit version required ArcGIS Pro (Note: installer installs default). Installation arcgisbinding package R. Clone arcgispro-py3 python environment.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Binding for Python's Arcpy","text":"can install development version aRcGeo GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"HarunCelikOtto/aRcGeo\")"},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"initializing-licensing-and-importing-arcpy-through-init_arcpy","dir":"","previous_headings":"","what":"Initializing Licensing and Importing arcpy through init_arcpy()","title":"An R Binding for Python's Arcpy","text":"init_arcpy() function takes name cloned conda environment cloned python executable path arcpy. activate license using arcgisbinding::arc.check_product() set executable paths reticulate run python functions.","code":"library(aRcGeo) ## The functions in this library require the user to have `arcgisbinding` loaded. ##                       Please load `library(arcgisbinding)` before running any aRcGeo functions. # This is using a conda environment name. init_arcpy(conda_env = \"arcgispro-py3-DeepLearning\") -- Initializing Connection --------------------------------------------------------------------- > Initializing Connection to ArcGIS.  -- Checking Conda Environment --------------------------------------------------------------------- i All Local Conda Environments: [1] \"base\"                        [2] \"Python_Image_Processing\"     [3] \"arcgispro-py3-DeepLearning\"  [4] \"r-miniconda\"                [5] \"r-reticulate\"               v Using conda environment: arcgispro-py3-DeepLearning v An `arcpy` module successfully imported.                               i ArcGIS Product Details:    $license                     [1] \"Advanced\"  $version [1] \"13.1.0.41833\"  $path [1] \"C:\\\\Program Files\\\\ArcGIS\\\\Pro\\\\\"  $dll [1] \"rarcproxy_pro\"  $app [1] \"ArcGIS Pro\"  $pkg_ver [1] \"1.0.1.300\" #This is if using a python.exe path is preferred. path = \"C:\\\\Any_Correctly_Formatted_Python_Path\\\\python.exe\" init_arcpy(python_env_path = path)"},{"path":[]},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"load-reticulate","dir":"","previous_headings":"Examples Using R Syntax to Execute arcpy Code","what":"Load reticulate","title":"An R Binding for Python's Arcpy","text":"","code":"library(reticulate)"},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"setting-workspace-to-a-geodatabase","dir":"","previous_headings":"Examples Using R Syntax to Execute arcpy Code","what":"Setting Workspace to a Geodatabase","title":"An R Binding for Python's Arcpy","text":"","code":"os <- import(\"os\")  gdatabasename = \"ARcGeo_Example.gdb\" currentdir = \"C:\\\\temp\\\\ArcGeo_Example\" workingenv = os$path$join(currentdir, gdatabasename)  arcpy$env$workspace = workingenv ## Current ArcGIS workspace environment is set to 'C:\\temp\\ArcGeo_Example\\ARcGeo_Example.gdb'"},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"listing-arcpy-environments","dir":"","previous_headings":"Examples Using R Syntax to Execute arcpy Code","what":"Listing arcpy Environments","title":"An R Binding for Python's Arcpy","text":"","code":"setwd(currentdir) arcpy$ListEnvironments() ##  [1] \"autoCommit\"                      \"XYResolution\"                    ##  [3] \"processingServerUser\"            \"gpuId\"                           ##  [5] \"XYDomain\"                        \"processingServerPassword\"        ##  [7] \"scratchWorkspace\"                \"recycleProcessingWorkers\"        ##  [9] \"cartographicPartitions\"          \"terrainMemoryUsage\"              ## [11] \"MTolerance\"                      \"compression\"                     ## [13] \"coincidentPoints\"                \"baUseDetailedAggregation\"        ## [15] \"timeZone\"                        \"randomGenerator\"                 ## [17] \"outputCoordinateSystem\"          \"rasterStatistics\"                ## [19] \"transferGDBAttributeProperties\"  \"ZDomain\"                         ## [21] \"cellSizeProjectionMethod\"        \"maintainCurveSegments\"           ## [23] \"transferDomains\"                 \"S100FeatureCatalogueFile\"        ## [25] \"maintainAttachments\"             \"resamplingMethod\"                ## [27] \"snapRaster\"                      \"cartographicCoordinateSystem\"    ## [29] \"baNetworkSource\"                 \"configKeyword\"                   ## [31] \"matchMultidimensionalVariable\"   \"outputZFlag\"                     ## [33] \"qualifiedFieldNames\"             \"tileSize\"                        ## [35] \"annotationTextStringFieldLength\" \"parallelProcessingFactor\"        ## [37] \"pyramid\"                         \"referenceScale\"                  ## [39] \"processingServer\"                \"extent\"                          ## [41] \"unionDimension\"                  \"XYTolerance\"                     ## [43] \"daylightSaving\"                  \"tinSaveVersion\"                  ## [45] \"nodata\"                          \"MDomain\"                         ## [47] \"cellSize\"                        \"outputZValue\"                    ## [49] \"outputMFlag\"                     \"cellAlignment\"                   ## [51] \"geographicTransformations\"       \"ZResolution\"                     ## [53] \"mask\"                            \"processorType\"                   ## [55] \"maintainSpatialIndex\"            \"preserveGlobalIds\"               ## [57] \"workspace\"                       \"retryOnFailures\"                 ## [59] \"MResolution\"                     \"baDataSource\"                    ## [61] \"ZTolerance\"                      \"scratchGDB\"                      ## [63] \"scratchFolder\"                   \"packageWorkspace\"                ## [65] \"scriptWorkspace\"                 \"addOutputsToMap\"                 ## [67] \"buildStatsAndRATForTempRaster\"   \"autoCancelling\"                  ## [69] \"isCancelled\"                     \"overwriteOutput\""},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"checking-out-extensions","dir":"","previous_headings":"Examples Using R Syntax to Execute arcpy Code","what":"Checking Out Extensions","title":"An R Binding for Python's Arcpy","text":"","code":"sprintf(\"Spatial extension is: %s\", arcpy$CheckOutExtension(\"Spatial\")) ## [1] \"Spatial extension is: CheckedOut\" sprintf(\"Indoors extension is: %s\", arcpy$CheckOutExtension(\"Indoors\")) ## [1] \"Indoors extension is: NotLicensed\""},{"path":"https://haruncelikotto.github.io/aRcGeo/index.html","id":"checking-out-help-documentation","dir":"","previous_headings":"Examples Using R Syntax to Execute arcpy Code","what":"Checking out Help Documentation","title":"An R Binding for Python's Arcpy","text":"","code":"py_help(arcpy$AcceptConnections)  ## This will output a text file with documentation for Python Objects"},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/check_product.html","id":null,"dir":"Reference","previous_headings":"","what":"Local arcgisbinding::arc.check_product() function. — check_product","title":"Local arcgisbinding::arc.check_product() function. — check_product","text":"copy arcgisbinding::arc.check_product() function created avoid errors R CMD Check's GitHub. Since arcgisbinding windows binary package, R CMD Check resolver fails loading package.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/check_product.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local arcgisbinding::arc.check_product() function. — check_product","text":"","code":"check_product()"},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/check_product.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local arcgisbinding::arc.check_product() function. — check_product","text":"output arcgisbinding::arc.check_product()","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/init_arcpy.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Connection to ArcGIS and arcpy — init_arcpy","title":"Initialize Connection to ArcGIS and arcpy — init_arcpy","text":"function initializes connection either ArcGIS Pro ArcMap also loads arcpy python module global environment.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/init_arcpy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Connection to ArcGIS and arcpy — init_arcpy","text":"","code":"init_arcpy(python_env_path = NULL, conda_env = NULL)"},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/init_arcpy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Connection to ArcGIS and arcpy — init_arcpy","text":"python_env_path Requires string python executable path arcpy environment. conda_env Requires string conda environment name containing arcpy environment.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/init_arcpy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Connection to ArcGIS and arcpy — init_arcpy","text":"global variable called arcpy loaded python module output arcgisbinding::arc.check_product() detailing ESRI product information.","code":""},{"path":"https://haruncelikotto.github.io/aRcGeo/reference/init_arcpy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Connection to ArcGIS and arcpy — init_arcpy","text":"","code":"if (FALSE) { init_arcpy(python_env_path = \"C:/ESRI/conda/envs/{conda environment name}/python.exe\") init_arcpy(conda_env_path = \"{conda environment name}\") # product: ArcGIS Pro (13.1.0.41833) # license: Advanced # version: 1.0.1.300 }"}]
